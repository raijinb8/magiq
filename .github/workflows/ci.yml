# .github/workflows/ci.yml
name: CI
on:
  pull_request:
    branches: [main, dev]
jobs:
  # フロントエンドのlintとテスト
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend lint
        working-directory: ./frontend
        run: npm run lint

      - name: Run frontend build
        working-directory: ./frontend
        run: npm run build

      # テストステップを有効化
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test:run

      # カバレッジレポート生成
      - name: Run frontend tests with coverage
        working-directory: ./frontend
        run: npm run test:coverage:ci

      # カバレッジしきい値チェック
      - name: Check coverage thresholds
        working-directory: ./frontend
        run: npm run test:coverage:check

      # カバレッジレポートのアップロード（オプション）
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./frontend/coverage
          flags: frontend
          fail_ci_if_error: true
        if: github.event_name == 'pull_request'

  # Supabase Edge Functionsのlintとテスト
  supabase:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Run Supabase Functions lint
        run: |
          cd supabase/functions
          deno lint --config ../deno.json || true

      - name: Type check Supabase Functions
        run: |
          cd supabase/functions
          deno check **/*.ts || true

      # バックエンドテストを追加
      - name: Run Supabase Functions tests
        run: |
          cd supabase/functions
          deno test

      # バックエンドカバレッジ（オプション）
      - name: Generate backend coverage
        run: |
          cd supabase/functions
          deno test --coverage=coverage
          deno coverage coverage --lcov > coverage.lcov
