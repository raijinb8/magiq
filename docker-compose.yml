version: '3.8'

services:
  # フロントエンド開発用サービス
  app:
    build:
      context: . # ★ プロジェクトルート (magiq) をビルドコンテキストにする
      dockerfile: ./frontend/Dockerfile # Dockerfileの場所を指定
    ports:
      - "5173:5173" # ホストの5173ポートをコンテナの5173ポートにマッピング
    # working_dir: /app
    volumes:
      - .:/app 
      - /app/frontend/node_modules # frontend内のnode_modulesを隔離
      # 本来はssh-agentで自動共有されるはずだが、されないため記載
      # 下記手法のデメリットはユーザーが固定されること
      - ~/.ssh:/home/node/.ssh:cached # ここでSSHの秘密鍵を指定する
      - ~/.gitconfig:/home/node/.gitconfig:cached # ここでGitのグローバル設定を共有する
    environment:
      # Supabaseローカル開発環境への接続情報を設定 (後ほどSupabase起動時に確認・設定)
      - VITE_LOCAL_SUPABASE_URL=http://localhost:54321 # SupabaseローカルAPIゲートウェイのデフォルトURL
      - VITE_LOCAL_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0 # Supabaseローカルのanon key
      # Reactアプリが必要とするその他の環境変数
    # Supabase CLIが起動するDockerネットワークに接続するために必要になることがある
    # networks:
    #   - supabase_network

  # (オプション) Supabase CLI やその他のツールを動かすためのサービスをここに定義することも可能
  # ですが、Dev Containerの機能でカバーできることが多いです。
  # Supabaseのサービス (Postgres, Kongなど) は `supabase start` コマンドによって
  # 自動的にDockerコンテナとして起動・管理されるため、ここでは明示的に定義しません。

# (オプション) Supabaseのネットワークに接続する場合
# networks:
#   supabase_network:
#     name: supabase_default_network # `supabase start` で作成されるネットワーク名 (通常はこれでOK)
#     external: true